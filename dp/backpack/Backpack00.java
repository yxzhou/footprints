package fgafa.dp.backpack;

/**
 * 
 * P01 有N件物品和一个容量为V的背包。第i件物品的容量是c[i]，价值是w[i]。
 *   Q1, 求解将哪些物品装入背包可使价值总和最大, 最大值是多少
 *   Q2, 求解将哪些物品装入背包可使价值总和最大, 最大值是容量V
 *  
 * P02 有N种物品和一个容量为V的背包，每种物品都有无限件可用。第i种物品的容量是c[i]，价值是w[i]。
 *   求解将哪些物品装入背包可使这些物品的容量总和不超过背包容量，且价值总和最大。
 *   
 * P03 有N种物品和一个容量为V的背包。第i种物品最多有n[i]件可用，每件费用是c[i]，价值是w[i]。
 *   求解将哪些物品装入背包可使这些物品的费用总和不超过背包容量，且价值总和最大。
 *  
 * P04 如果将P01、P02、P03混合起来。也就是说，有的物品只可以取一次（01背包），有的物品可以取无限次（完全背包），有的物品可以取的次数有一个上限（多重背包）。应该怎么求解呢？
 * 
 * 
 */
public class Backpack00 {

}
